//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using Metamodel.DeepPCM.Core.Entity;
using Metamodel.DeepPCM.Parameter;
using Metamodel.DeepPCM.Repository;
using Metamodel.DeepPCM.System0;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace Metamodel.DeepPCM.Qosannotations
{
    
    
    /// <summary>
    /// The default implementation of the QoSAnnotations class
    /// </summary>
    [XmlNamespaceAttribute("http://github.com/ghmanager/DeepPCM/QoSAnnotations/1.0")]
    [XmlNamespacePrefixAttribute("qosannotations")]
    [ModelRepresentationClassAttribute("http://github.com/ghmanager/DeepPCM/1.0#//qosannotations//QoSAnnotations/")]
    [DebuggerDisplayAttribute("QoSAnnotations {Id}")]
    public class QoSAnnotations : Metamodel.DeepPCM.Core.Entity.Entity, IQoSAnnotations, IModelElement
    {
        
        /// <summary>
        /// The backing field for the SpecifiedOutputParameterAbstractions_QoSAnnotations property
        /// </summary>
        private QoSAnnotationsSpecifiedOutputParameterAbstractions_QoSAnnotationsCollection _specifiedOutputParameterAbstractions_QoSAnnotations;
        
        /// <summary>
        /// The backing field for the SpecifiedQoSAnnotations_QoSAnnotations property
        /// </summary>
        private QoSAnnotationsSpecifiedQoSAnnotations_QoSAnnotationsCollection _specifiedQoSAnnotations_QoSAnnotations;
        
        private static IClass _classInstance;
        
        public QoSAnnotations()
        {
            this._specifiedOutputParameterAbstractions_QoSAnnotations = new QoSAnnotationsSpecifiedOutputParameterAbstractions_QoSAnnotationsCollection(this);
            this._specifiedOutputParameterAbstractions_QoSAnnotations.CollectionChanging += this.SpecifiedOutputParameterAbstractions_QoSAnnotationsCollectionChanging;
            this._specifiedOutputParameterAbstractions_QoSAnnotations.CollectionChanged += this.SpecifiedOutputParameterAbstractions_QoSAnnotationsCollectionChanged;
            this._specifiedQoSAnnotations_QoSAnnotations = new QoSAnnotationsSpecifiedQoSAnnotations_QoSAnnotationsCollection(this);
            this._specifiedQoSAnnotations_QoSAnnotations.CollectionChanging += this.SpecifiedQoSAnnotations_QoSAnnotationsCollectionChanging;
            this._specifiedQoSAnnotations_QoSAnnotations.CollectionChanged += this.SpecifiedQoSAnnotations_QoSAnnotationsCollectionChanged;
        }
        
        /// <summary>
        /// The specifiedOutputParameterAbstractions_QoSAnnotations property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("specifiedOutputParameterAbstractions_QoSAnnotations")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("qosAnnotations_SpecifiedOutputParameterAbstraction")]
        [ConstantAttribute()]
        public virtual ICollectionExpression<ISpecifiedOutputParameterAbstraction> SpecifiedOutputParameterAbstractions_QoSAnnotations
        {
            get
            {
                return this._specifiedOutputParameterAbstractions_QoSAnnotations;
            }
        }
        
        /// <summary>
        /// The system_QoSAnnotations property
        /// </summary>
        [XmlElementNameAttribute("system_QoSAnnotations")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("qosAnnotations_System")]
        public virtual ISystemSpecification System_QoSAnnotations
        {
            get
            {
                return ModelHelper.CastAs<ISystemSpecification>(this.Parent);
            }
            set
            {
                this.Parent = value;
            }
        }
        
        /// <summary>
        /// The specifiedQoSAnnotations_QoSAnnotations property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("specifiedQoSAnnotations_QoSAnnotations")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("qosAnnotations_SpecifiedQoSAnnotation")]
        [ConstantAttribute()]
        public virtual ICollectionExpression<ISpecifiedQoSAnnotation> SpecifiedQoSAnnotations_QoSAnnotations
        {
            get
            {
                return this._specifiedQoSAnnotations_QoSAnnotations;
            }
        }
        
        /// <summary>
        /// Gets the child model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> Children
        {
            get
            {
                return base.Children.Concat(new QoSAnnotationsChildrenCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new QoSAnnotationsReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://github.com/ghmanager/DeepPCM/1.0#//qosannotations//QoSAnnotations/")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// Gets fired before the System_QoSAnnotations property changes its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> System_QoSAnnotationsChanging;
        
        /// <summary>
        /// Gets fired when the System_QoSAnnotations property changed its value
        /// </summary>
        public event System.EventHandler<ValueChangedEventArgs> System_QoSAnnotationsChanged;
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the SpecifiedOutputParameterAbstractions_QoSAnnotations property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void SpecifiedOutputParameterAbstractions_QoSAnnotationsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("SpecifiedOutputParameterAbstractions_QoSAnnotations", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the SpecifiedOutputParameterAbstractions_QoSAnnotations property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void SpecifiedOutputParameterAbstractions_QoSAnnotationsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("SpecifiedOutputParameterAbstractions_QoSAnnotations", e);
        }
        
        /// <summary>
        /// Raises the System_QoSAnnotationsChanging event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnSystem_QoSAnnotationsChanging(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.System_QoSAnnotationsChanging;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element is about to change
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanging(IModelElement newParent, IModelElement oldParent)
        {
            ISystemSpecification oldSystem_QoSAnnotations = ModelHelper.CastAs<ISystemSpecification>(oldParent);
            ISystemSpecification newSystem_QoSAnnotations = ModelHelper.CastAs<ISystemSpecification>(newParent);
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldSystem_QoSAnnotations, newSystem_QoSAnnotations);
            this.OnSystem_QoSAnnotationsChanging(e);
            this.OnPropertyChanging("System_QoSAnnotations");
        }
        
        /// <summary>
        /// Raises the System_QoSAnnotationsChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnSystem_QoSAnnotationsChanged(ValueChangedEventArgs eventArgs)
        {
            System.EventHandler<ValueChangedEventArgs> handler = this.System_QoSAnnotationsChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element changes
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanged(IModelElement newParent, IModelElement oldParent)
        {
            ISystemSpecification oldSystem_QoSAnnotations = ModelHelper.CastAs<ISystemSpecification>(oldParent);
            ISystemSpecification newSystem_QoSAnnotations = ModelHelper.CastAs<ISystemSpecification>(newParent);
            if ((oldSystem_QoSAnnotations != null))
            {
                oldSystem_QoSAnnotations.QosAnnotations_System.Remove(this);
            }
            if ((newSystem_QoSAnnotations != null))
            {
                newSystem_QoSAnnotations.QosAnnotations_System.Add(this);
            }
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldSystem_QoSAnnotations, newSystem_QoSAnnotations);
            this.OnSystem_QoSAnnotationsChanged(e);
            this.OnPropertyChanged("System_QoSAnnotations", e);
            base.OnParentChanged(newParent, oldParent);
        }
        
        /// <summary>
        /// Forwards CollectionChanging notifications for the SpecifiedQoSAnnotations_QoSAnnotations property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void SpecifiedQoSAnnotations_QoSAnnotationsCollectionChanging(object sender, NMF.Collections.ObjectModel.NotifyCollectionChangingEventArgs e)
        {
            this.OnCollectionChanging("SpecifiedQoSAnnotations_QoSAnnotations", e);
        }
        
        /// <summary>
        /// Forwards CollectionChanged notifications for the SpecifiedQoSAnnotations_QoSAnnotations property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void SpecifiedQoSAnnotations_QoSAnnotationsCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("SpecifiedQoSAnnotations_QoSAnnotations", e);
        }
        
        /// <summary>
        /// Gets the Model element collection for the given feature
        /// </summary>
        /// <returns>A non-generic list of elements</returns>
        /// <param name="feature">The requested feature</param>
        protected override System.Collections.IList GetCollectionForFeature(string feature)
        {
            if ((feature == "SPECIFIEDOUTPUTPARAMETERABSTRACTIONS_QOSANNOTATIONS"))
            {
                return this._specifiedOutputParameterAbstractions_QoSAnnotations;
            }
            if ((feature == "SPECIFIEDQOSANNOTATIONS_QOSANNOTATIONS"))
            {
                return this._specifiedQoSAnnotations_QoSAnnotations;
            }
            return base.GetCollectionForFeature(feature);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "SYSTEM_QOSANNOTATIONS"))
            {
                this.System_QoSAnnotations = ((ISystemSpecification)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "SYSTEM_QOSANNOTATIONS"))
            {
                return new System_QoSAnnotationsProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "SYSTEM_QOSANNOTATIONS"))
            {
                return new System_QoSAnnotationsProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((IClass)(MetaRepository.Instance.Resolve("http://github.com/ghmanager/DeepPCM/1.0#//qosannotations//QoSAnnotations/")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// The collection class to to represent the children of the QoSAnnotations class
        /// </summary>
        public class QoSAnnotationsChildrenCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private QoSAnnotations _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public QoSAnnotationsChildrenCollection(QoSAnnotations parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    count = (count + this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Count);
                    count = (count + this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.SpecifiedQoSAnnotations_QoSAnnotations.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.SpecifiedQoSAnnotations_QoSAnnotations.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                ISpecifiedOutputParameterAbstraction specifiedOutputParameterAbstractions_QoSAnnotationsCasted = item.As<ISpecifiedOutputParameterAbstraction>();
                if ((specifiedOutputParameterAbstractions_QoSAnnotationsCasted != null))
                {
                    this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Add(specifiedOutputParameterAbstractions_QoSAnnotationsCasted);
                }
                ISpecifiedQoSAnnotation specifiedQoSAnnotations_QoSAnnotationsCasted = item.As<ISpecifiedQoSAnnotation>();
                if ((specifiedQoSAnnotations_QoSAnnotationsCasted != null))
                {
                    this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Add(specifiedQoSAnnotations_QoSAnnotationsCasted);
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Clear();
                this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if (this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Contains(item))
                {
                    return true;
                }
                if (this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                IEnumerator<IModelElement> specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator = this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.GetEnumerator();
                try
                {
                    for (
                    ; specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator.Dispose();
                }
                IEnumerator<IModelElement> specifiedQoSAnnotations_QoSAnnotationsEnumerator = this._parent.SpecifiedQoSAnnotations_QoSAnnotations.GetEnumerator();
                try
                {
                    for (
                    ; specifiedQoSAnnotations_QoSAnnotationsEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = specifiedQoSAnnotations_QoSAnnotationsEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    specifiedQoSAnnotations_QoSAnnotationsEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                ISpecifiedOutputParameterAbstraction specifiedOutputParameterAbstractionItem = item.As<ISpecifiedOutputParameterAbstraction>();
                if (((specifiedOutputParameterAbstractionItem != null) 
                            && this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Remove(specifiedOutputParameterAbstractionItem)))
                {
                    return true;
                }
                ISpecifiedQoSAnnotation specifiedQoSAnnotationItem = item.As<ISpecifiedQoSAnnotation>();
                if (((specifiedQoSAnnotationItem != null) 
                            && this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Remove(specifiedQoSAnnotationItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations).Concat(this._parent.SpecifiedQoSAnnotations_QoSAnnotations).GetEnumerator();
            }
        }
        
        /// <summary>
        /// The collection class to to represent the children of the QoSAnnotations class
        /// </summary>
        public class QoSAnnotationsReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private QoSAnnotations _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public QoSAnnotationsReferencedElementsCollection(QoSAnnotations parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    count = (count + this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Count);
                    if ((this._parent.System_QoSAnnotations != null))
                    {
                        count = (count + 1);
                    }
                    count = (count + this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.System_QoSAnnotationsChanged += this.PropagateValueChanges;
                this._parent.SpecifiedQoSAnnotations_QoSAnnotations.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.System_QoSAnnotationsChanged -= this.PropagateValueChanges;
                this._parent.SpecifiedQoSAnnotations_QoSAnnotations.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                ISpecifiedOutputParameterAbstraction specifiedOutputParameterAbstractions_QoSAnnotationsCasted = item.As<ISpecifiedOutputParameterAbstraction>();
                if ((specifiedOutputParameterAbstractions_QoSAnnotationsCasted != null))
                {
                    this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Add(specifiedOutputParameterAbstractions_QoSAnnotationsCasted);
                }
                if ((this._parent.System_QoSAnnotations == null))
                {
                    ISystemSpecification system_QoSAnnotationsCasted = item.As<ISystemSpecification>();
                    if ((system_QoSAnnotationsCasted != null))
                    {
                        this._parent.System_QoSAnnotations = system_QoSAnnotationsCasted;
                        return;
                    }
                }
                ISpecifiedQoSAnnotation specifiedQoSAnnotations_QoSAnnotationsCasted = item.As<ISpecifiedQoSAnnotation>();
                if ((specifiedQoSAnnotations_QoSAnnotationsCasted != null))
                {
                    this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Add(specifiedQoSAnnotations_QoSAnnotationsCasted);
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Clear();
                this._parent.System_QoSAnnotations = null;
                this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if (this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Contains(item))
                {
                    return true;
                }
                if ((item == this._parent.System_QoSAnnotations))
                {
                    return true;
                }
                if (this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                IEnumerator<IModelElement> specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator = this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.GetEnumerator();
                try
                {
                    for (
                    ; specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    specifiedOutputParameterAbstractions_QoSAnnotationsEnumerator.Dispose();
                }
                if ((this._parent.System_QoSAnnotations != null))
                {
                    array[arrayIndex] = this._parent.System_QoSAnnotations;
                    arrayIndex = (arrayIndex + 1);
                }
                IEnumerator<IModelElement> specifiedQoSAnnotations_QoSAnnotationsEnumerator = this._parent.SpecifiedQoSAnnotations_QoSAnnotations.GetEnumerator();
                try
                {
                    for (
                    ; specifiedQoSAnnotations_QoSAnnotationsEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = specifiedQoSAnnotations_QoSAnnotationsEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    specifiedQoSAnnotations_QoSAnnotationsEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                ISpecifiedOutputParameterAbstraction specifiedOutputParameterAbstractionItem = item.As<ISpecifiedOutputParameterAbstraction>();
                if (((specifiedOutputParameterAbstractionItem != null) 
                            && this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations.Remove(specifiedOutputParameterAbstractionItem)))
                {
                    return true;
                }
                if ((this._parent.System_QoSAnnotations == item))
                {
                    this._parent.System_QoSAnnotations = null;
                    return true;
                }
                ISpecifiedQoSAnnotation specifiedQoSAnnotationItem = item.As<ISpecifiedQoSAnnotation>();
                if (((specifiedQoSAnnotationItem != null) 
                            && this._parent.SpecifiedQoSAnnotations_QoSAnnotations.Remove(specifiedQoSAnnotationItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.SpecifiedOutputParameterAbstractions_QoSAnnotations).Concat(this._parent.System_QoSAnnotations).Concat(this._parent.SpecifiedQoSAnnotations_QoSAnnotations).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the system_QoSAnnotations property
        /// </summary>
        private sealed class System_QoSAnnotationsProxy : ModelPropertyChange<IQoSAnnotations, ISystemSpecification>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public System_QoSAnnotationsProxy(IQoSAnnotations modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override ISystemSpecification Value
            {
                get
                {
                    return this.ModelElement.System_QoSAnnotations;
                }
                set
                {
                    this.ModelElement.System_QoSAnnotations = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.System_QoSAnnotationsChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.System_QoSAnnotationsChanged -= handler;
            }
        }
    }
}

