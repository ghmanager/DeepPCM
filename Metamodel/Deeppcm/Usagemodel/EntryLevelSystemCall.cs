//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using DeepPCM.Deeppcm.Core;
using DeepPCM.Deeppcm.Core.Composition;
using DeepPCM.Deeppcm.Core.Entity;
using DeepPCM.Deeppcm.Parameter;
using DeepPCM.Deeppcm.Repository;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace DeepPCM.Deeppcm.Usagemodel
{
    
    
    /// <summary>
    /// The default implementation of the EntryLevelSystemCall class
    /// </summary>
    [XmlNamespaceAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/UsageModel/5.0")]
    [XmlNamespacePrefixAttribute("usagemodel")]
    [ModelRepresentationClassAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//usagemodel//EntryLevelSystemCa" +
        "ll/")]
    [DebuggerDisplayAttribute("EntryLevelSystemCall {Id}")]
    public class EntryLevelSystemCall : AbstractUserAction, IEntryLevelSystemCall, IModelElement
    {
        
        /// <summary>
        /// The backing field for the Priority property
        /// </summary>
        private Nullable<int> _priority;
        
        /// <summary>
        /// The backing field for the ProvidedInterface_EntryLevelSystemCall property
        /// </summary>
        private IOperationInterface _providedInterface_EntryLevelSystemCall;
        
        /// <summary>
        /// The backing field for the OperationSignature__EntryLevelSystemCall property
        /// </summary>
        private IOperationSignature _operationSignature__EntryLevelSystemCall;
        
        /// <summary>
        /// The backing field for the OutputParameterUsages_EntryLevelSystemCall property
        /// </summary>
        private EntryLevelSystemCallOutputParameterUsages_EntryLevelSystemCallCollection _outputParameterUsages_EntryLevelSystemCall;
        
        /// <summary>
        /// The backing field for the InputParameterUsages_EntryLevelSystemCall property
        /// </summary>
        private EntryLevelSystemCallInputParameterUsages_EntryLevelSystemCallCollection _inputParameterUsages_EntryLevelSystemCall;
        
        public EntryLevelSystemCall()
        {
            this._outputParameterUsages_EntryLevelSystemCall = new EntryLevelSystemCallOutputParameterUsages_EntryLevelSystemCallCollection(this);
            this._outputParameterUsages_EntryLevelSystemCall.CollectionChanged += this.OutputParameterUsages_EntryLevelSystemCallCollectionChanged;
            this._inputParameterUsages_EntryLevelSystemCall = new EntryLevelSystemCallInputParameterUsages_EntryLevelSystemCallCollection(this);
            this._inputParameterUsages_EntryLevelSystemCall.CollectionChanged += this.InputParameterUsages_EntryLevelSystemCallCollectionChanged;
        }
        
        /// <summary>
        /// The priority property
        /// </summary>
        [XmlElementNameAttribute("priority")]
        [XmlAttributeAttribute(true)]
        public virtual Nullable<int> Priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((this._priority != value))
                {
                    Nullable<int> old = this._priority;
                    this._priority = value;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnPriorityChanged(e);
                    this.OnPropertyChanged("Priority", e);
                }
            }
        }
        
        /// <summary>
        /// The providedInterface_EntryLevelSystemCall property
        /// </summary>
        [XmlElementNameAttribute("providedInterface_EntryLevelSystemCall")]
        [XmlAttributeAttribute(true)]
        public virtual IOperationInterface ProvidedInterface_EntryLevelSystemCall
        {
            get
            {
                return this._providedInterface_EntryLevelSystemCall;
            }
            set
            {
                if ((this._providedInterface_EntryLevelSystemCall != value))
                {
                    IOperationInterface old = this._providedInterface_EntryLevelSystemCall;
                    this._providedInterface_EntryLevelSystemCall = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetProvidedInterface_EntryLevelSystemCall;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetProvidedInterface_EntryLevelSystemCall;
                    }
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnProvidedInterface_EntryLevelSystemCallChanged(e);
                    this.OnPropertyChanged("ProvidedInterface_EntryLevelSystemCall", e);
                }
            }
        }
        
        /// <summary>
        /// The operationSignature__EntryLevelSystemCall property
        /// </summary>
        [XmlElementNameAttribute("operationSignature__EntryLevelSystemCall")]
        [XmlAttributeAttribute(true)]
        public virtual IOperationSignature OperationSignature__EntryLevelSystemCall
        {
            get
            {
                return this._operationSignature__EntryLevelSystemCall;
            }
            set
            {
                if ((this._operationSignature__EntryLevelSystemCall != value))
                {
                    IOperationSignature old = this._operationSignature__EntryLevelSystemCall;
                    this._operationSignature__EntryLevelSystemCall = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetOperationSignature__EntryLevelSystemCall;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetOperationSignature__EntryLevelSystemCall;
                    }
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnOperationSignature__EntryLevelSystemCallChanged(e);
                    this.OnPropertyChanged("OperationSignature__EntryLevelSystemCall", e);
                }
            }
        }
        
        /// <summary>
        /// The outputParameterUsages_EntryLevelSystemCall property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("outputParameterUsages_EntryLevelSystemCall")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("entryLevelSystemCall_OutputParameterUsage")]
        [ConstantAttribute()]
        public virtual ICollectionExpression<IVariableUsage> OutputParameterUsages_EntryLevelSystemCall
        {
            get
            {
                return this._outputParameterUsages_EntryLevelSystemCall;
            }
        }
        
        /// <summary>
        /// The inputParameterUsages_EntryLevelSystemCall property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [XmlElementNameAttribute("inputParameterUsages_EntryLevelSystemCall")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("entryLevelSystemCall_InputParameterUsage")]
        [ConstantAttribute()]
        public virtual ICollectionExpression<IVariableUsage> InputParameterUsages_EntryLevelSystemCall
        {
            get
            {
                return this._inputParameterUsages_EntryLevelSystemCall;
            }
        }
        
        /// <summary>
        /// Gets the child model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> Children
        {
            get
            {
                return base.Children.Concat(new EntryLevelSystemCallChildrenCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new EntryLevelSystemCallReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class element that describes the structure of this type
        /// </summary>
        public new static NMF.Models.Meta.IClass ClassInstance
        {
            get
            {
                return NMF.Models.Repository.MetaRepository.Instance.ResolveClass("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//usagemodel//EntryLevelSystemCa" +
                        "ll/");
            }
        }
        
        /// <summary>
        /// Gets fired when the Priority property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> PriorityChanged;
        
        /// <summary>
        /// Gets fired when the ProvidedInterface_EntryLevelSystemCall property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> ProvidedInterface_EntryLevelSystemCallChanged;
        
        /// <summary>
        /// Gets fired when the OperationSignature__EntryLevelSystemCall property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> OperationSignature__EntryLevelSystemCallChanged;
        
        /// <summary>
        /// Raises the PriorityChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnPriorityChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.PriorityChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the ProvidedInterface_EntryLevelSystemCallChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnProvidedInterface_EntryLevelSystemCallChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.ProvidedInterface_EntryLevelSystemCallChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the ProvidedInterface_EntryLevelSystemCall property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetProvidedInterface_EntryLevelSystemCall(object sender, EventArgs eventArgs)
        {
            this.ProvidedInterface_EntryLevelSystemCall = null;
        }
        
        /// <summary>
        /// Raises the OperationSignature__EntryLevelSystemCallChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnOperationSignature__EntryLevelSystemCallChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.OperationSignature__EntryLevelSystemCallChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the OperationSignature__EntryLevelSystemCall property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetOperationSignature__EntryLevelSystemCall(object sender, EventArgs eventArgs)
        {
            this.OperationSignature__EntryLevelSystemCall = null;
        }
        
        /// <summary>
        /// Forwards change notifications for the OutputParameterUsages_EntryLevelSystemCall property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void OutputParameterUsages_EntryLevelSystemCallCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("OutputParameterUsages_EntryLevelSystemCall", e);
        }
        
        /// <summary>
        /// Forwards change notifications for the InputParameterUsages_EntryLevelSystemCall property to the parent model element
        /// </summary>
        /// <param name="sender">The collection that raised the change</param>
        /// <param name="e">The original event data</param>
        private void InputParameterUsages_EntryLevelSystemCallCollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
        {
            this.OnCollectionChanged("InputParameterUsages_EntryLevelSystemCall", e);
        }
        
        /// <summary>
        /// Resolves the given attribute name
        /// </summary>
        /// <returns>The attribute value or null if it could not be found</returns>
        /// <param name="attribute">The requested attribute name</param>
        /// <param name="index">The index of this attribute</param>
        protected override object GetAttributeValue(string attribute, int index)
        {
            if ((attribute == "PRIORITY"))
            {
                return this.Priority;
            }
            return base.GetAttributeValue(attribute, index);
        }
        
        /// <summary>
        /// Gets the Model element collection for the given feature
        /// </summary>
        /// <returns>A non-generic list of elements</returns>
        /// <param name="feature">The requested feature</param>
        protected override System.Collections.IList GetCollectionForFeature(string feature)
        {
            if ((feature == "OUTPUTPARAMETERUSAGES_ENTRYLEVELSYSTEMCALL"))
            {
                return this._outputParameterUsages_EntryLevelSystemCall;
            }
            if ((feature == "INPUTPARAMETERUSAGES_ENTRYLEVELSYSTEMCALL"))
            {
                return this._inputParameterUsages_EntryLevelSystemCall;
            }
            return base.GetCollectionForFeature(feature);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "PROVIDEDINTERFACE_ENTRYLEVELSYSTEMCALL"))
            {
                this.ProvidedInterface_EntryLevelSystemCall = ((IOperationInterface)(value));
                return;
            }
            if ((feature == "OPERATIONSIGNATURE__ENTRYLEVELSYSTEMCALL"))
            {
                this.OperationSignature__EntryLevelSystemCall = ((IOperationSignature)(value));
                return;
            }
            if ((feature == "PRIORITY"))
            {
                this.Priority = ((int)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "PROVIDEDINTERFACE_ENTRYLEVELSYSTEMCALL"))
            {
                return new ProvidedInterface_EntryLevelSystemCallProxy(this);
            }
            if ((attribute == "OPERATIONSIGNATURE__ENTRYLEVELSYSTEMCALL"))
            {
                return new OperationSignature__EntryLevelSystemCallProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "PROVIDEDINTERFACE_ENTRYLEVELSYSTEMCALL"))
            {
                return new ProvidedInterface_EntryLevelSystemCallProxy(this);
            }
            if ((reference == "OPERATIONSIGNATURE__ENTRYLEVELSYSTEMCALL"))
            {
                return new OperationSignature__EntryLevelSystemCallProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            return ((IClass)(NMF.Models.Repository.MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//usagemodel//EntryLevelSystemCa" +
                    "ll/")));
        }
        
        /// <summary>
        /// The collection class to to represent the children of the EntryLevelSystemCall class
        /// </summary>
        public class EntryLevelSystemCallChildrenCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private EntryLevelSystemCall _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public EntryLevelSystemCallChildrenCollection(EntryLevelSystemCall parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    count = (count + this._parent.OutputParameterUsages_EntryLevelSystemCall.Count);
                    count = (count + this._parent.InputParameterUsages_EntryLevelSystemCall.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.OutputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.InputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.OutputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.InputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                IVariableUsage outputParameterUsages_EntryLevelSystemCallCasted = item.As<IVariableUsage>();
                if ((outputParameterUsages_EntryLevelSystemCallCasted != null))
                {
                    this._parent.OutputParameterUsages_EntryLevelSystemCall.Add(outputParameterUsages_EntryLevelSystemCallCasted);
                }
                IVariableUsage inputParameterUsages_EntryLevelSystemCallCasted = item.As<IVariableUsage>();
                if ((inputParameterUsages_EntryLevelSystemCallCasted != null))
                {
                    this._parent.InputParameterUsages_EntryLevelSystemCall.Add(inputParameterUsages_EntryLevelSystemCallCasted);
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.OutputParameterUsages_EntryLevelSystemCall.Clear();
                this._parent.InputParameterUsages_EntryLevelSystemCall.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if (this._parent.OutputParameterUsages_EntryLevelSystemCall.Contains(item))
                {
                    return true;
                }
                if (this._parent.InputParameterUsages_EntryLevelSystemCall.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                IEnumerator<IModelElement> outputParameterUsages_EntryLevelSystemCallEnumerator = this._parent.OutputParameterUsages_EntryLevelSystemCall.GetEnumerator();
                try
                {
                    for (
                    ; outputParameterUsages_EntryLevelSystemCallEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = outputParameterUsages_EntryLevelSystemCallEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    outputParameterUsages_EntryLevelSystemCallEnumerator.Dispose();
                }
                IEnumerator<IModelElement> inputParameterUsages_EntryLevelSystemCallEnumerator = this._parent.InputParameterUsages_EntryLevelSystemCall.GetEnumerator();
                try
                {
                    for (
                    ; inputParameterUsages_EntryLevelSystemCallEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = inputParameterUsages_EntryLevelSystemCallEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    inputParameterUsages_EntryLevelSystemCallEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                IVariableUsage variableUsageItem = item.As<IVariableUsage>();
                if (((variableUsageItem != null) 
                            && this._parent.OutputParameterUsages_EntryLevelSystemCall.Remove(variableUsageItem)))
                {
                    return true;
                }
                if (((variableUsageItem != null) 
                            && this._parent.InputParameterUsages_EntryLevelSystemCall.Remove(variableUsageItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.OutputParameterUsages_EntryLevelSystemCall).Concat(this._parent.InputParameterUsages_EntryLevelSystemCall).GetEnumerator();
            }
        }
        
        /// <summary>
        /// The collection class to to represent the children of the EntryLevelSystemCall class
        /// </summary>
        public class EntryLevelSystemCallReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private EntryLevelSystemCall _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public EntryLevelSystemCallReferencedElementsCollection(EntryLevelSystemCall parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.ProvidedInterface_EntryLevelSystemCall != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.OperationSignature__EntryLevelSystemCall != null))
                    {
                        count = (count + 1);
                    }
                    count = (count + this._parent.OutputParameterUsages_EntryLevelSystemCall.Count);
                    count = (count + this._parent.InputParameterUsages_EntryLevelSystemCall.Count);
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.ProvidedInterface_EntryLevelSystemCallChanged += this.PropagateValueChanges;
                this._parent.OperationSignature__EntryLevelSystemCallChanged += this.PropagateValueChanges;
                this._parent.OutputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
                this._parent.InputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged += this.PropagateCollectionChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.ProvidedInterface_EntryLevelSystemCallChanged -= this.PropagateValueChanges;
                this._parent.OperationSignature__EntryLevelSystemCallChanged -= this.PropagateValueChanges;
                this._parent.OutputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
                this._parent.InputParameterUsages_EntryLevelSystemCall.AsNotifiable().CollectionChanged -= this.PropagateCollectionChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.ProvidedInterface_EntryLevelSystemCall == null))
                {
                    IOperationInterface providedInterface_EntryLevelSystemCallCasted = item.As<IOperationInterface>();
                    if ((providedInterface_EntryLevelSystemCallCasted != null))
                    {
                        this._parent.ProvidedInterface_EntryLevelSystemCall = providedInterface_EntryLevelSystemCallCasted;
                        return;
                    }
                }
                if ((this._parent.OperationSignature__EntryLevelSystemCall == null))
                {
                    IOperationSignature operationSignature__EntryLevelSystemCallCasted = item.As<IOperationSignature>();
                    if ((operationSignature__EntryLevelSystemCallCasted != null))
                    {
                        this._parent.OperationSignature__EntryLevelSystemCall = operationSignature__EntryLevelSystemCallCasted;
                        return;
                    }
                }
                IVariableUsage outputParameterUsages_EntryLevelSystemCallCasted = item.As<IVariableUsage>();
                if ((outputParameterUsages_EntryLevelSystemCallCasted != null))
                {
                    this._parent.OutputParameterUsages_EntryLevelSystemCall.Add(outputParameterUsages_EntryLevelSystemCallCasted);
                }
                IVariableUsage inputParameterUsages_EntryLevelSystemCallCasted = item.As<IVariableUsage>();
                if ((inputParameterUsages_EntryLevelSystemCallCasted != null))
                {
                    this._parent.InputParameterUsages_EntryLevelSystemCall.Add(inputParameterUsages_EntryLevelSystemCallCasted);
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.ProvidedInterface_EntryLevelSystemCall = null;
                this._parent.OperationSignature__EntryLevelSystemCall = null;
                this._parent.OutputParameterUsages_EntryLevelSystemCall.Clear();
                this._parent.InputParameterUsages_EntryLevelSystemCall.Clear();
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.ProvidedInterface_EntryLevelSystemCall))
                {
                    return true;
                }
                if ((item == this._parent.OperationSignature__EntryLevelSystemCall))
                {
                    return true;
                }
                if (this._parent.OutputParameterUsages_EntryLevelSystemCall.Contains(item))
                {
                    return true;
                }
                if (this._parent.InputParameterUsages_EntryLevelSystemCall.Contains(item))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.ProvidedInterface_EntryLevelSystemCall != null))
                {
                    array[arrayIndex] = this._parent.ProvidedInterface_EntryLevelSystemCall;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.OperationSignature__EntryLevelSystemCall != null))
                {
                    array[arrayIndex] = this._parent.OperationSignature__EntryLevelSystemCall;
                    arrayIndex = (arrayIndex + 1);
                }
                IEnumerator<IModelElement> outputParameterUsages_EntryLevelSystemCallEnumerator = this._parent.OutputParameterUsages_EntryLevelSystemCall.GetEnumerator();
                try
                {
                    for (
                    ; outputParameterUsages_EntryLevelSystemCallEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = outputParameterUsages_EntryLevelSystemCallEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    outputParameterUsages_EntryLevelSystemCallEnumerator.Dispose();
                }
                IEnumerator<IModelElement> inputParameterUsages_EntryLevelSystemCallEnumerator = this._parent.InputParameterUsages_EntryLevelSystemCall.GetEnumerator();
                try
                {
                    for (
                    ; inputParameterUsages_EntryLevelSystemCallEnumerator.MoveNext(); 
                    )
                    {
                        array[arrayIndex] = inputParameterUsages_EntryLevelSystemCallEnumerator.Current;
                        arrayIndex = (arrayIndex + 1);
                    }
                }
                finally
                {
                    inputParameterUsages_EntryLevelSystemCallEnumerator.Dispose();
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.ProvidedInterface_EntryLevelSystemCall == item))
                {
                    this._parent.ProvidedInterface_EntryLevelSystemCall = null;
                    return true;
                }
                if ((this._parent.OperationSignature__EntryLevelSystemCall == item))
                {
                    this._parent.OperationSignature__EntryLevelSystemCall = null;
                    return true;
                }
                IVariableUsage variableUsageItem = item.As<IVariableUsage>();
                if (((variableUsageItem != null) 
                            && this._parent.OutputParameterUsages_EntryLevelSystemCall.Remove(variableUsageItem)))
                {
                    return true;
                }
                if (((variableUsageItem != null) 
                            && this._parent.InputParameterUsages_EntryLevelSystemCall.Remove(variableUsageItem)))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.ProvidedInterface_EntryLevelSystemCall).Concat(this._parent.OperationSignature__EntryLevelSystemCall).Concat(this._parent.OutputParameterUsages_EntryLevelSystemCall).Concat(this._parent.InputParameterUsages_EntryLevelSystemCall).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the priority property
        /// </summary>
        private sealed class PriorityProxy : ModelPropertyChange<IEntryLevelSystemCall, Nullable<int>>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public PriorityProxy(IEntryLevelSystemCall modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override Nullable<int> Value
            {
                get
                {
                    return this.ModelElement.Priority;
                }
                set
                {
                    this.ModelElement.Priority = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.PriorityChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.PriorityChanged -= handler;
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the providedInterface_EntryLevelSystemCall property
        /// </summary>
        private sealed class ProvidedInterface_EntryLevelSystemCallProxy : ModelPropertyChange<IEntryLevelSystemCall, IOperationInterface>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public ProvidedInterface_EntryLevelSystemCallProxy(IEntryLevelSystemCall modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IOperationInterface Value
            {
                get
                {
                    return this.ModelElement.ProvidedInterface_EntryLevelSystemCall;
                }
                set
                {
                    this.ModelElement.ProvidedInterface_EntryLevelSystemCall = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.ProvidedInterface_EntryLevelSystemCallChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.ProvidedInterface_EntryLevelSystemCallChanged -= handler;
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the operationSignature__EntryLevelSystemCall property
        /// </summary>
        private sealed class OperationSignature__EntryLevelSystemCallProxy : ModelPropertyChange<IEntryLevelSystemCall, IOperationSignature>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public OperationSignature__EntryLevelSystemCallProxy(IEntryLevelSystemCall modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IOperationSignature Value
            {
                get
                {
                    return this.ModelElement.OperationSignature__EntryLevelSystemCall;
                }
                set
                {
                    this.ModelElement.OperationSignature__EntryLevelSystemCall = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.OperationSignature__EntryLevelSystemCallChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.OperationSignature__EntryLevelSystemCallChanged -= handler;
            }
        }
    }
}

