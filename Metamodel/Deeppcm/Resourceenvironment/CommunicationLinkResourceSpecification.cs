//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using DeepPCM.Deeppcm.Core;
using DeepPCM.Deeppcm.Core.Entity;
using DeepPCM.Deeppcm.Resourcetype;
using DeepPCM.Identifier;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace DeepPCM.Deeppcm.Resourceenvironment
{
    
    
    /// <summary>
    /// The default implementation of the CommunicationLinkResourceSpecification class
    /// </summary>
    [XmlNamespaceAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/ResourceEnvironment/5.0")]
    [XmlNamespacePrefixAttribute("resourceenvironment")]
    [ModelRepresentationClassAttribute("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//resourceenvironment//Communica" +
        "tionLinkResourceSpecification/")]
    [DebuggerDisplayAttribute("CommunicationLinkResourceSpecification {Id}")]
    public class CommunicationLinkResourceSpecification : DeepPCM.Identifier.Identifier, ICommunicationLinkResourceSpecification, IModelElement
    {
        
        /// <summary>
        /// The backing field for the FailureProbability property
        /// </summary>
        private double _failureProbability = 0D;
        
        /// <summary>
        /// The backing field for the CommunicationLinkResourceType_CommunicationLinkResourceSpecification property
        /// </summary>
        private ICommunicationLinkResourceType _communicationLinkResourceType_CommunicationLinkResourceSpecification;
        
        /// <summary>
        /// The backing field for the Latency_CommunicationLinkResourceSpecification property
        /// </summary>
        private IPCMRandomVariable _latency_CommunicationLinkResourceSpecification;
        
        /// <summary>
        /// The backing field for the Throughput_CommunicationLinkResourceSpecification property
        /// </summary>
        private IPCMRandomVariable _throughput_CommunicationLinkResourceSpecification;
        
        /// <summary>
        /// The failureProbability property
        /// </summary>
        [DefaultValueAttribute(0D)]
        [XmlElementNameAttribute("failureProbability")]
        [XmlAttributeAttribute(true)]
        public virtual double FailureProbability
        {
            get
            {
                return this._failureProbability;
            }
            set
            {
                if ((this._failureProbability != value))
                {
                    double old = this._failureProbability;
                    this._failureProbability = value;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnFailureProbabilityChanged(e);
                    this.OnPropertyChanged("FailureProbability", e);
                }
            }
        }
        
        /// <summary>
        /// The linkingResource_CommunicationLinkResourceSpecification property
        /// </summary>
        [XmlElementNameAttribute("linkingResource_CommunicationLinkResourceSpecification")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("communicationLinkResourceSpecifications_LinkingResource")]
        public virtual ILinkingResource LinkingResource_CommunicationLinkResourceSpecification
        {
            get
            {
                return ModelHelper.CastAs<ILinkingResource>(this.Parent);
            }
            set
            {
                this.Parent = value;
            }
        }
        
        /// <summary>
        /// The communicationLinkResourceType_CommunicationLinkResourceSpecification property
        /// </summary>
        [XmlElementNameAttribute("communicationLinkResourceType_CommunicationLinkResourceSpecification")]
        [XmlAttributeAttribute(true)]
        public virtual ICommunicationLinkResourceType CommunicationLinkResourceType_CommunicationLinkResourceSpecification
        {
            get
            {
                return this._communicationLinkResourceType_CommunicationLinkResourceSpecification;
            }
            set
            {
                if ((this._communicationLinkResourceType_CommunicationLinkResourceSpecification != value))
                {
                    ICommunicationLinkResourceType old = this._communicationLinkResourceType_CommunicationLinkResourceSpecification;
                    this._communicationLinkResourceType_CommunicationLinkResourceSpecification = value;
                    if ((old != null))
                    {
                        old.Deleted -= this.OnResetCommunicationLinkResourceType_CommunicationLinkResourceSpecification;
                    }
                    if ((value != null))
                    {
                        value.Deleted += this.OnResetCommunicationLinkResourceType_CommunicationLinkResourceSpecification;
                    }
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnCommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged(e);
                    this.OnPropertyChanged("CommunicationLinkResourceType_CommunicationLinkResourceSpecification", e);
                }
            }
        }
        
        /// <summary>
        /// The latency_CommunicationLinkResourceSpecification property
        /// </summary>
        [XmlElementNameAttribute("latency_CommunicationLinkResourceSpecification")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("communicationLinkResourceSpecification_latency_PCMRandomVariable")]
        public virtual IPCMRandomVariable Latency_CommunicationLinkResourceSpecification
        {
            get
            {
                return this._latency_CommunicationLinkResourceSpecification;
            }
            set
            {
                if ((this._latency_CommunicationLinkResourceSpecification != value))
                {
                    IPCMRandomVariable old = this._latency_CommunicationLinkResourceSpecification;
                    this._latency_CommunicationLinkResourceSpecification = value;
                    if ((old != null))
                    {
                        old.CommunicationLinkResourceSpecification_latency_PCMRandomVariable = null;
                        old.Parent = null;
                        old.Deleted -= this.OnResetLatency_CommunicationLinkResourceSpecification;
                    }
                    if ((value != null))
                    {
                        value.CommunicationLinkResourceSpecification_latency_PCMRandomVariable = this;
                        value.Parent = this;
                        value.Deleted += this.OnResetLatency_CommunicationLinkResourceSpecification;
                    }
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnLatency_CommunicationLinkResourceSpecificationChanged(e);
                    this.OnPropertyChanged("Latency_CommunicationLinkResourceSpecification", e);
                }
            }
        }
        
        /// <summary>
        /// The throughput_CommunicationLinkResourceSpecification property
        /// </summary>
        [XmlElementNameAttribute("throughput_CommunicationLinkResourceSpecification")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("communicationLinkResourceSpecifcation_throughput_PCMRandomVariable")]
        public virtual IPCMRandomVariable Throughput_CommunicationLinkResourceSpecification
        {
            get
            {
                return this._throughput_CommunicationLinkResourceSpecification;
            }
            set
            {
                if ((this._throughput_CommunicationLinkResourceSpecification != value))
                {
                    IPCMRandomVariable old = this._throughput_CommunicationLinkResourceSpecification;
                    this._throughput_CommunicationLinkResourceSpecification = value;
                    if ((old != null))
                    {
                        old.CommunicationLinkResourceSpecifcation_throughput_PCMRandomVariable = null;
                        old.Parent = null;
                        old.Deleted -= this.OnResetThroughput_CommunicationLinkResourceSpecification;
                    }
                    if ((value != null))
                    {
                        value.CommunicationLinkResourceSpecifcation_throughput_PCMRandomVariable = this;
                        value.Parent = this;
                        value.Deleted += this.OnResetThroughput_CommunicationLinkResourceSpecification;
                    }
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnThroughput_CommunicationLinkResourceSpecificationChanged(e);
                    this.OnPropertyChanged("Throughput_CommunicationLinkResourceSpecification", e);
                }
            }
        }
        
        /// <summary>
        /// Gets the child model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> Children
        {
            get
            {
                return base.Children.Concat(new CommunicationLinkResourceSpecificationChildrenCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the referenced model elements of this model element
        /// </summary>
        public override IEnumerableExpression<IModelElement> ReferencedElements
        {
            get
            {
                return base.ReferencedElements.Concat(new CommunicationLinkResourceSpecificationReferencedElementsCollection(this));
            }
        }
        
        /// <summary>
        /// Gets the Class element that describes the structure of this type
        /// </summary>
        public new static NMF.Models.Meta.IClass ClassInstance
        {
            get
            {
                return NMF.Models.Repository.MetaRepository.Instance.ResolveClass("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//resourceenvironment//Communica" +
                        "tionLinkResourceSpecification/");
            }
        }
        
        /// <summary>
        /// Gets fired when the FailureProbability property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> FailureProbabilityChanged;
        
        /// <summary>
        /// Gets fired when the LinkingResource_CommunicationLinkResourceSpecification property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> LinkingResource_CommunicationLinkResourceSpecificationChanged;
        
        /// <summary>
        /// Gets fired when the CommunicationLinkResourceType_CommunicationLinkResourceSpecification property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged;
        
        /// <summary>
        /// Gets fired when the Latency_CommunicationLinkResourceSpecification property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> Latency_CommunicationLinkResourceSpecificationChanged;
        
        /// <summary>
        /// Gets fired when the Throughput_CommunicationLinkResourceSpecification property changed its value
        /// </summary>
        public event EventHandler<ValueChangedEventArgs> Throughput_CommunicationLinkResourceSpecificationChanged;
        
        /// <summary>
        /// Raises the FailureProbabilityChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnFailureProbabilityChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.FailureProbabilityChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Raises the LinkingResource_CommunicationLinkResourceSpecificationChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnLinkingResource_CommunicationLinkResourceSpecificationChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.LinkingResource_CommunicationLinkResourceSpecificationChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Gets called when the parent model element of the current model element changes
        /// </summary>
        /// <param name="oldParent">The old parent model element</param>
        /// <param name="newParent">The new parent model element</param>
        protected override void OnParentChanged(IModelElement newParent, IModelElement oldParent)
        {
            ILinkingResource oldLinkingResource_CommunicationLinkResourceSpecification = ModelHelper.CastAs<ILinkingResource>(oldParent);
            ILinkingResource newLinkingResource_CommunicationLinkResourceSpecification = ModelHelper.CastAs<ILinkingResource>(newParent);
            if ((oldLinkingResource_CommunicationLinkResourceSpecification != null))
            {
                oldLinkingResource_CommunicationLinkResourceSpecification.CommunicationLinkResourceSpecifications_LinkingResource = null;
            }
            if ((newLinkingResource_CommunicationLinkResourceSpecification != null))
            {
                newLinkingResource_CommunicationLinkResourceSpecification.CommunicationLinkResourceSpecifications_LinkingResource = this;
            }
            ValueChangedEventArgs e = new ValueChangedEventArgs(oldLinkingResource_CommunicationLinkResourceSpecification, newLinkingResource_CommunicationLinkResourceSpecification);
            this.OnLinkingResource_CommunicationLinkResourceSpecificationChanged(e);
            this.OnPropertyChanged("LinkingResource_CommunicationLinkResourceSpecification", e);
        }
        
        /// <summary>
        /// Raises the CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnCommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the CommunicationLinkResourceType_CommunicationLinkResourceSpecification property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetCommunicationLinkResourceType_CommunicationLinkResourceSpecification(object sender, EventArgs eventArgs)
        {
            this.CommunicationLinkResourceType_CommunicationLinkResourceSpecification = null;
        }
        
        /// <summary>
        /// Raises the Latency_CommunicationLinkResourceSpecificationChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnLatency_CommunicationLinkResourceSpecificationChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.Latency_CommunicationLinkResourceSpecificationChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the Latency_CommunicationLinkResourceSpecification property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetLatency_CommunicationLinkResourceSpecification(object sender, EventArgs eventArgs)
        {
            this.Latency_CommunicationLinkResourceSpecification = null;
        }
        
        /// <summary>
        /// Raises the Throughput_CommunicationLinkResourceSpecificationChanged event
        /// </summary>
        /// <param name="eventArgs">The event data</param>
        protected virtual void OnThroughput_CommunicationLinkResourceSpecificationChanged(ValueChangedEventArgs eventArgs)
        {
            EventHandler<ValueChangedEventArgs> handler = this.Throughput_CommunicationLinkResourceSpecificationChanged;
            if ((handler != null))
            {
                handler.Invoke(this, eventArgs);
            }
        }
        
        /// <summary>
        /// Handles the event that the Throughput_CommunicationLinkResourceSpecification property must reset
        /// </summary>
        /// <param name="sender">The object that sent this reset request</param>
        /// <param name="eventArgs">The event data for the reset event</param>
        private void OnResetThroughput_CommunicationLinkResourceSpecification(object sender, EventArgs eventArgs)
        {
            this.Throughput_CommunicationLinkResourceSpecification = null;
        }
        
        /// <summary>
        /// Gets the relative URI fragment for the given child model element
        /// </summary>
        /// <returns>A fragment of the relative URI</returns>
        /// <param name="element">The element that should be looked for</param>
        protected override string GetRelativePathForNonIdentifiedChild(IModelElement element)
        {
            if ((element == this.Latency_CommunicationLinkResourceSpecification))
            {
                return ModelHelper.CreatePath("Latency_CommunicationLinkResourceSpecification");
            }
            if ((element == this.Throughput_CommunicationLinkResourceSpecification))
            {
                return ModelHelper.CreatePath("Throughput_CommunicationLinkResourceSpecification");
            }
            return base.GetRelativePathForNonIdentifiedChild(element);
        }
        
        /// <summary>
        /// Resolves the given URI to a child model element
        /// </summary>
        /// <returns>The model element or null if it could not be found</returns>
        /// <param name="reference">The requested reference name</param>
        /// <param name="index">The index of this reference</param>
        protected override IModelElement GetModelElementForReference(string reference, int index)
        {
            if ((reference == "LATENCY_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return this.Latency_CommunicationLinkResourceSpecification;
            }
            if ((reference == "THROUGHPUT_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return this.Throughput_CommunicationLinkResourceSpecification;
            }
            return base.GetModelElementForReference(reference, index);
        }
        
        /// <summary>
        /// Resolves the given attribute name
        /// </summary>
        /// <returns>The attribute value or null if it could not be found</returns>
        /// <param name="attribute">The requested attribute name</param>
        /// <param name="index">The index of this attribute</param>
        protected override object GetAttributeValue(string attribute, int index)
        {
            if ((attribute == "FAILUREPROBABILITY"))
            {
                return this.FailureProbability;
            }
            return base.GetAttributeValue(attribute, index);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "LINKINGRESOURCE_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                this.LinkingResource_CommunicationLinkResourceSpecification = ((ILinkingResource)(value));
                return;
            }
            if ((feature == "COMMUNICATIONLINKRESOURCETYPE_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                this.CommunicationLinkResourceType_CommunicationLinkResourceSpecification = ((ICommunicationLinkResourceType)(value));
                return;
            }
            if ((feature == "LATENCY_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                this.Latency_CommunicationLinkResourceSpecification = ((IPCMRandomVariable)(value));
                return;
            }
            if ((feature == "THROUGHPUT_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                this.Throughput_CommunicationLinkResourceSpecification = ((IPCMRandomVariable)(value));
                return;
            }
            if ((feature == "FAILUREPROBABILITY"))
            {
                this.FailureProbability = ((double)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "LINKINGRESOURCE_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new LinkingResource_CommunicationLinkResourceSpecificationProxy(this);
            }
            if ((attribute == "COMMUNICATIONLINKRESOURCETYPE_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new CommunicationLinkResourceType_CommunicationLinkResourceSpecificationProxy(this);
            }
            if ((attribute == "LATENCY_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new Latency_CommunicationLinkResourceSpecificationProxy(this);
            }
            if ((attribute == "THROUGHPUT_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new Throughput_CommunicationLinkResourceSpecificationProxy(this);
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the property expression for the given reference
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="reference">The requested reference in upper case</param>
        protected override NMF.Expressions.INotifyExpression<NMF.Models.IModelElement> GetExpressionForReference(string reference)
        {
            if ((reference == "LINKINGRESOURCE_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new LinkingResource_CommunicationLinkResourceSpecificationProxy(this);
            }
            if ((reference == "COMMUNICATIONLINKRESOURCETYPE_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new CommunicationLinkResourceType_CommunicationLinkResourceSpecificationProxy(this);
            }
            if ((reference == "LATENCY_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new Latency_CommunicationLinkResourceSpecificationProxy(this);
            }
            if ((reference == "THROUGHPUT_COMMUNICATIONLINKRESOURCESPECIFICATION"))
            {
                return new Throughput_CommunicationLinkResourceSpecificationProxy(this);
            }
            return base.GetExpressionForReference(reference);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override IClass GetClass()
        {
            return ((IClass)(NMF.Models.Repository.MetaRepository.Instance.Resolve("http://sdq.ipd.uka.de/PalladioComponentModel/5.0#//resourceenvironment//Communica" +
                    "tionLinkResourceSpecification/")));
        }
        
        /// <summary>
        /// The collection class to to represent the children of the CommunicationLinkResourceSpecification class
        /// </summary>
        public class CommunicationLinkResourceSpecificationChildrenCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private CommunicationLinkResourceSpecification _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public CommunicationLinkResourceSpecificationChildrenCollection(CommunicationLinkResourceSpecification parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.Latency_CommunicationLinkResourceSpecification != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.Throughput_CommunicationLinkResourceSpecification != null))
                    {
                        count = (count + 1);
                    }
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.Latency_CommunicationLinkResourceSpecificationChanged += this.PropagateValueChanges;
                this._parent.Throughput_CommunicationLinkResourceSpecificationChanged += this.PropagateValueChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.Latency_CommunicationLinkResourceSpecificationChanged -= this.PropagateValueChanges;
                this._parent.Throughput_CommunicationLinkResourceSpecificationChanged -= this.PropagateValueChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.Latency_CommunicationLinkResourceSpecification == null))
                {
                    IPCMRandomVariable latency_CommunicationLinkResourceSpecificationCasted = item.As<IPCMRandomVariable>();
                    if ((latency_CommunicationLinkResourceSpecificationCasted != null))
                    {
                        this._parent.Latency_CommunicationLinkResourceSpecification = latency_CommunicationLinkResourceSpecificationCasted;
                        return;
                    }
                }
                if ((this._parent.Throughput_CommunicationLinkResourceSpecification == null))
                {
                    IPCMRandomVariable throughput_CommunicationLinkResourceSpecificationCasted = item.As<IPCMRandomVariable>();
                    if ((throughput_CommunicationLinkResourceSpecificationCasted != null))
                    {
                        this._parent.Throughput_CommunicationLinkResourceSpecification = throughput_CommunicationLinkResourceSpecificationCasted;
                        return;
                    }
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.Latency_CommunicationLinkResourceSpecification = null;
                this._parent.Throughput_CommunicationLinkResourceSpecification = null;
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.Latency_CommunicationLinkResourceSpecification))
                {
                    return true;
                }
                if ((item == this._parent.Throughput_CommunicationLinkResourceSpecification))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.Latency_CommunicationLinkResourceSpecification != null))
                {
                    array[arrayIndex] = this._parent.Latency_CommunicationLinkResourceSpecification;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.Throughput_CommunicationLinkResourceSpecification != null))
                {
                    array[arrayIndex] = this._parent.Throughput_CommunicationLinkResourceSpecification;
                    arrayIndex = (arrayIndex + 1);
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.Latency_CommunicationLinkResourceSpecification == item))
                {
                    this._parent.Latency_CommunicationLinkResourceSpecification = null;
                    return true;
                }
                if ((this._parent.Throughput_CommunicationLinkResourceSpecification == item))
                {
                    this._parent.Throughput_CommunicationLinkResourceSpecification = null;
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.Latency_CommunicationLinkResourceSpecification).Concat(this._parent.Throughput_CommunicationLinkResourceSpecification).GetEnumerator();
            }
        }
        
        /// <summary>
        /// The collection class to to represent the children of the CommunicationLinkResourceSpecification class
        /// </summary>
        public class CommunicationLinkResourceSpecificationReferencedElementsCollection : ReferenceCollection, ICollectionExpression<IModelElement>, ICollection<IModelElement>
        {
            
            private CommunicationLinkResourceSpecification _parent;
            
            /// <summary>
            /// Creates a new instance
            /// </summary>
            public CommunicationLinkResourceSpecificationReferencedElementsCollection(CommunicationLinkResourceSpecification parent)
            {
                this._parent = parent;
            }
            
            /// <summary>
            /// Gets the amount of elements contained in this collection
            /// </summary>
            public override int Count
            {
                get
                {
                    int count = 0;
                    if ((this._parent.LinkingResource_CommunicationLinkResourceSpecification != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.Latency_CommunicationLinkResourceSpecification != null))
                    {
                        count = (count + 1);
                    }
                    if ((this._parent.Throughput_CommunicationLinkResourceSpecification != null))
                    {
                        count = (count + 1);
                    }
                    return count;
                }
            }
            
            protected override void AttachCore()
            {
                this._parent.LinkingResource_CommunicationLinkResourceSpecificationChanged += this.PropagateValueChanges;
                this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged += this.PropagateValueChanges;
                this._parent.Latency_CommunicationLinkResourceSpecificationChanged += this.PropagateValueChanges;
                this._parent.Throughput_CommunicationLinkResourceSpecificationChanged += this.PropagateValueChanges;
            }
            
            protected override void DetachCore()
            {
                this._parent.LinkingResource_CommunicationLinkResourceSpecificationChanged -= this.PropagateValueChanges;
                this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged -= this.PropagateValueChanges;
                this._parent.Latency_CommunicationLinkResourceSpecificationChanged -= this.PropagateValueChanges;
                this._parent.Throughput_CommunicationLinkResourceSpecificationChanged -= this.PropagateValueChanges;
            }
            
            /// <summary>
            /// Adds the given element to the collection
            /// </summary>
            /// <param name="item">The item to add</param>
            public override void Add(IModelElement item)
            {
                if ((this._parent.LinkingResource_CommunicationLinkResourceSpecification == null))
                {
                    ILinkingResource linkingResource_CommunicationLinkResourceSpecificationCasted = item.As<ILinkingResource>();
                    if ((linkingResource_CommunicationLinkResourceSpecificationCasted != null))
                    {
                        this._parent.LinkingResource_CommunicationLinkResourceSpecification = linkingResource_CommunicationLinkResourceSpecificationCasted;
                        return;
                    }
                }
                if ((this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification == null))
                {
                    ICommunicationLinkResourceType communicationLinkResourceType_CommunicationLinkResourceSpecificationCasted = item.As<ICommunicationLinkResourceType>();
                    if ((communicationLinkResourceType_CommunicationLinkResourceSpecificationCasted != null))
                    {
                        this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification = communicationLinkResourceType_CommunicationLinkResourceSpecificationCasted;
                        return;
                    }
                }
                if ((this._parent.Latency_CommunicationLinkResourceSpecification == null))
                {
                    IPCMRandomVariable latency_CommunicationLinkResourceSpecificationCasted = item.As<IPCMRandomVariable>();
                    if ((latency_CommunicationLinkResourceSpecificationCasted != null))
                    {
                        this._parent.Latency_CommunicationLinkResourceSpecification = latency_CommunicationLinkResourceSpecificationCasted;
                        return;
                    }
                }
                if ((this._parent.Throughput_CommunicationLinkResourceSpecification == null))
                {
                    IPCMRandomVariable throughput_CommunicationLinkResourceSpecificationCasted = item.As<IPCMRandomVariable>();
                    if ((throughput_CommunicationLinkResourceSpecificationCasted != null))
                    {
                        this._parent.Throughput_CommunicationLinkResourceSpecification = throughput_CommunicationLinkResourceSpecificationCasted;
                        return;
                    }
                }
            }
            
            /// <summary>
            /// Clears the collection and resets all references that implement it.
            /// </summary>
            public override void Clear()
            {
                this._parent.LinkingResource_CommunicationLinkResourceSpecification = null;
                this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification = null;
                this._parent.Latency_CommunicationLinkResourceSpecification = null;
                this._parent.Throughput_CommunicationLinkResourceSpecification = null;
            }
            
            /// <summary>
            /// Gets a value indicating whether the given element is contained in the collection
            /// </summary>
            /// <returns>True, if it is contained, otherwise False</returns>
            /// <param name="item">The item that should be looked out for</param>
            public override bool Contains(IModelElement item)
            {
                if ((item == this._parent.LinkingResource_CommunicationLinkResourceSpecification))
                {
                    return true;
                }
                if ((item == this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification))
                {
                    return true;
                }
                if ((item == this._parent.Latency_CommunicationLinkResourceSpecification))
                {
                    return true;
                }
                if ((item == this._parent.Throughput_CommunicationLinkResourceSpecification))
                {
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Copies the contents of the collection to the given array starting from the given array index
            /// </summary>
            /// <param name="array">The array in which the elements should be copied</param>
            /// <param name="arrayIndex">The starting index</param>
            public override void CopyTo(IModelElement[] array, int arrayIndex)
            {
                if ((this._parent.LinkingResource_CommunicationLinkResourceSpecification != null))
                {
                    array[arrayIndex] = this._parent.LinkingResource_CommunicationLinkResourceSpecification;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification != null))
                {
                    array[arrayIndex] = this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.Latency_CommunicationLinkResourceSpecification != null))
                {
                    array[arrayIndex] = this._parent.Latency_CommunicationLinkResourceSpecification;
                    arrayIndex = (arrayIndex + 1);
                }
                if ((this._parent.Throughput_CommunicationLinkResourceSpecification != null))
                {
                    array[arrayIndex] = this._parent.Throughput_CommunicationLinkResourceSpecification;
                    arrayIndex = (arrayIndex + 1);
                }
            }
            
            /// <summary>
            /// Removes the given item from the collection
            /// </summary>
            /// <returns>True, if the item was removed, otherwise False</returns>
            /// <param name="item">The item that should be removed</param>
            public override bool Remove(IModelElement item)
            {
                if ((this._parent.LinkingResource_CommunicationLinkResourceSpecification == item))
                {
                    this._parent.LinkingResource_CommunicationLinkResourceSpecification = null;
                    return true;
                }
                if ((this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification == item))
                {
                    this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification = null;
                    return true;
                }
                if ((this._parent.Latency_CommunicationLinkResourceSpecification == item))
                {
                    this._parent.Latency_CommunicationLinkResourceSpecification = null;
                    return true;
                }
                if ((this._parent.Throughput_CommunicationLinkResourceSpecification == item))
                {
                    this._parent.Throughput_CommunicationLinkResourceSpecification = null;
                    return true;
                }
                return false;
            }
            
            /// <summary>
            /// Gets an enumerator that enumerates the collection
            /// </summary>
            /// <returns>A generic enumerator</returns>
            public override IEnumerator<IModelElement> GetEnumerator()
            {
                return Enumerable.Empty<IModelElement>().Concat(this._parent.LinkingResource_CommunicationLinkResourceSpecification).Concat(this._parent.CommunicationLinkResourceType_CommunicationLinkResourceSpecification).Concat(this._parent.Latency_CommunicationLinkResourceSpecification).Concat(this._parent.Throughput_CommunicationLinkResourceSpecification).GetEnumerator();
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the failureProbability property
        /// </summary>
        private sealed class FailureProbabilityProxy : ModelPropertyChange<ICommunicationLinkResourceSpecification, double>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public FailureProbabilityProxy(ICommunicationLinkResourceSpecification modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override double Value
            {
                get
                {
                    return this.ModelElement.FailureProbability;
                }
                set
                {
                    this.ModelElement.FailureProbability = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.FailureProbabilityChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.FailureProbabilityChanged -= handler;
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the linkingResource_CommunicationLinkResourceSpecification property
        /// </summary>
        private sealed class LinkingResource_CommunicationLinkResourceSpecificationProxy : ModelPropertyChange<ICommunicationLinkResourceSpecification, ILinkingResource>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public LinkingResource_CommunicationLinkResourceSpecificationProxy(ICommunicationLinkResourceSpecification modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override ILinkingResource Value
            {
                get
                {
                    return this.ModelElement.LinkingResource_CommunicationLinkResourceSpecification;
                }
                set
                {
                    this.ModelElement.LinkingResource_CommunicationLinkResourceSpecification = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.LinkingResource_CommunicationLinkResourceSpecificationChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.LinkingResource_CommunicationLinkResourceSpecificationChanged -= handler;
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the communicationLinkResourceType_CommunicationLinkResourceSpecification property
        /// </summary>
        private sealed class CommunicationLinkResourceType_CommunicationLinkResourceSpecificationProxy : ModelPropertyChange<ICommunicationLinkResourceSpecification, ICommunicationLinkResourceType>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public CommunicationLinkResourceType_CommunicationLinkResourceSpecificationProxy(ICommunicationLinkResourceSpecification modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override ICommunicationLinkResourceType Value
            {
                get
                {
                    return this.ModelElement.CommunicationLinkResourceType_CommunicationLinkResourceSpecification;
                }
                set
                {
                    this.ModelElement.CommunicationLinkResourceType_CommunicationLinkResourceSpecification = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.CommunicationLinkResourceType_CommunicationLinkResourceSpecificationChanged -= handler;
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the latency_CommunicationLinkResourceSpecification property
        /// </summary>
        private sealed class Latency_CommunicationLinkResourceSpecificationProxy : ModelPropertyChange<ICommunicationLinkResourceSpecification, IPCMRandomVariable>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Latency_CommunicationLinkResourceSpecificationProxy(ICommunicationLinkResourceSpecification modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IPCMRandomVariable Value
            {
                get
                {
                    return this.ModelElement.Latency_CommunicationLinkResourceSpecification;
                }
                set
                {
                    this.ModelElement.Latency_CommunicationLinkResourceSpecification = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.Latency_CommunicationLinkResourceSpecificationChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.Latency_CommunicationLinkResourceSpecificationChanged -= handler;
            }
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the throughput_CommunicationLinkResourceSpecification property
        /// </summary>
        private sealed class Throughput_CommunicationLinkResourceSpecificationProxy : ModelPropertyChange<ICommunicationLinkResourceSpecification, IPCMRandomVariable>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public Throughput_CommunicationLinkResourceSpecificationProxy(ICommunicationLinkResourceSpecification modelElement) : 
                    base(modelElement)
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override IPCMRandomVariable Value
            {
                get
                {
                    return this.ModelElement.Throughput_CommunicationLinkResourceSpecification;
                }
                set
                {
                    this.ModelElement.Throughput_CommunicationLinkResourceSpecification = value;
                }
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be subscribed to the property change event</param>
            protected override void RegisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.Throughput_CommunicationLinkResourceSpecificationChanged += handler;
            }
            
            /// <summary>
            /// Registers an event handler to subscribe specifically on the changed event for this property
            /// </summary>
            /// <param name="handler">The handler that should be unsubscribed from the property change event</param>
            protected override void UnregisterChangeEventHandler(System.EventHandler<NMF.Expressions.ValueChangedEventArgs> handler)
            {
                this.ModelElement.Throughput_CommunicationLinkResourceSpecificationChanged -= handler;
            }
        }
    }
}

